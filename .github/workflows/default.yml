name: default
on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ env.cache-name }}-

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install project
        run: npm install

      - name: Run linters
        run: npm run lint

  scan:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Cache trivy
        uses: actions/cache@v2
        env:
          cache-name: cache-trivy
        with:
          path: ~/.cache/trivy
          key: ${{ env.cache-name }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ env.cache-name }}-

      - name: Run trivy
        uses: aquasecurity/trivy-action@master
        with:
          exit-code: 1
          format: 'sarif'
          output: 'trivy-results.sarif'
          scan-ref: '.'
          scan-type: 'fs'
          severity: 'CRITICAL,HIGH'
          list-all-pkgs: 'true'
          ignore-unfixed: true

      - name: Publish results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ env.cache-name }}-

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install project
        run: npm install

      - name: Run tests
        run: npm run test

      - name: Publish report
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: '*/TESTS.xml'
